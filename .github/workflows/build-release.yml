name: Build Release Assets
on:
  push:
    branches: ['*']
  workflow_dispatch:

jobs:
  build-ubuntu-x86-64:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get Version Number
        id: version_number
        run: .github/actions/get-version.sh ubuntu x86-64

      - name: Install Prerequisites
        run: sudo apt install -y libgmp-dev libnuma-dev

      - name: Build
        env:
          BB_ARTIFACT_NAME: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          BB_VERSION: ${{steps.version_number.outputs.BB_VERSION}}
        run: .github/actions/build-asset-unix.sh

      - name: Upload Artifact Ubuntu x86-64
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          path: ${{ github.workspace }}/bin/${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          if-no-files-found: error

  build-centos-x86-64:
    runs-on: ubuntu-20.04
    container:
      image: quay.io/centos/centos:stream8
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get Version Number
        id: version_number
        run: .github/actions/get-version.sh centos x86-64

      - name: Install Prerequisites
        run: |
          dnf install -y gcc-toolset-9-gcc gcc-toolset-9-gcc-c++ \
                         cmake gmp-devel numactl-devel make git

      - name: Build
        env:
          BB_ARTIFACT_NAME: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          BB_VERSION: ${{steps.version_number.outputs.BB_VERSION}}
        run: |
          source /opt/rh/gcc-toolset-9/enable
          .github/actions/build-asset-unix.sh
      
      - name: Upload Artifact CentOS x86-64
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          path: ${{ github.workspace }}/bin/${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          if-no-files-found: error

  build-ubuntu-arm64:
    runs-on: [ARM64, Linux]
    container:
      image: chianetwork/ubuntu-20.04-builder:latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get Version Number
        id: version_number
        run: .github/actions/get-version.sh ubuntu arm64

      - name: Install Prerequisites
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt update
          apt install -y build-essential git libgmp-dev libnuma-dev

      - name: Build
        env:
          BB_ARTIFACT_NAME: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          BB_VERSION: ${{steps.version_number.outputs.BB_VERSION}}
        run: .github/actions/build-asset-unix.sh

      - name: Upload Artifact Ubuntu ARM64
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          path: ${{ github.workspace }}/bin/${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          if-no-files-found: error

  build-centos-arm64:
    runs-on: [ARM64, Linux]
    container:
      image: quay.io/centos/centos:stream8
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get Version Number
        id: version_number
        run: .github/actions/get-version.sh centos arm64

      - name: Install Prerequisites
        run: |
          dnf install -y gcc-toolset-9-gcc gcc-toolset-9-gcc-c++ \
                         cmake gmp-devel numactl-devel make git

      - name: Build
        env:
          BB_ARTIFACT_NAME: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          BB_VERSION: ${{steps.version_number.outputs.BB_VERSION}}
        run: |
          source /opt/rh/gcc-toolset-9/enable
          .github/actions/build-asset-unix.sh

      - name: Upload Artifact CentOS ARM64
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          path: ${{ github.workspace }}/bin/${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          if-no-files-found: error

  build-windows-x86-64:
    runs-on: windows-2019
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get Version Number
        shell: bash
        id: version_number
        run: .github/actions/get-version.sh windows x86-64

      - name: Build
        shell: bash
        env:
          BB_ARTIFACT_NAME: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          BB_VERSION: ${{steps.version_number.outputs.BB_VERSION}}
        run: |
          
          mkdir build && cd build
          cmake ..
          bash -e -o pipefail ../embed-version.sh
          cat ../src/Version.h
          cmake --build . --target bladebit --config Release

          # Ensure bladebit version matches expected version
          bb_version="$(./Release/bladebit.exe --version | xargs)"

          if [[ "$bb_version" != "$BB_VERSION" ]]; then
              >&2 echo "Incorrect bladebit version. Got but '$bb_version' expected '$BB_VERSION'."
              exit 1
          fi
          
          mkdir ../bin
          cd Release
          7z.exe a -tzip ../../bin/${BB_ARTIFACT_NAME} bladebit.exe
          ls -la ../../bin

      - name: Upload Artifact Windows x86-64
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          path: ${{ github.workspace }}/bin/${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          if-no-files-found: error

  build-macos-arm64:
    runs-on: [macOS, ARM64]
    steps:
      - name: Cleanup Environment
        uses: Chia-Network/actions/clean-workspace@main

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get Version Number
        id: version_number
        run: bash -e .github/actions/get-version.sh macos arm64

      - name: Install Prerequisites
        run: brew install cmake

      - name: Build
        env:
          BB_ARTIFACT_NAME: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          BB_VERSION: ${{steps.version_number.outputs.BB_VERSION}}
        run: .github/actions/build-asset-unix.sh

      - name: Upload Artifact macOS arm64
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          path: ${{ github.workspace }}/bin/${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          if-no-files-found: error

  build-macos-x86-64:
    runs-on: macOS-latest
    steps:
      - name: Cleanup Environment
        uses: Chia-Network/actions/clean-workspace@main

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get Version Number
        id: version_number
        run: .github/actions/get-version.sh macos x86-64

      - name: Install Prerequisites
        run: brew install cmake

      - name: Build
        env:
          BB_ARTIFACT_NAME: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          BB_VERSION: ${{steps.version_number.outputs.BB_VERSION}}
        run: .github/actions/build-asset-unix.sh

      - name: Upload Artifact macOS x86-64
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          path: ${{ github.workspace }}/bin/${{ steps.version_number.outputs.BB_ARTIFACT_NAME }}
          if-no-files-found: error
